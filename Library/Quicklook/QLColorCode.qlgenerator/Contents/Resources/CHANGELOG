2.1.0:
    * Add option to preview file as RTF  (thanks @silum).
    * Add Kotlin/Gradle (thanks @sonique6784).
    * Remove JSON support (thanks @erdtsksn).
    * Add C# support.
    * Add Scala support.
    * Add "reduce_filesize" plugin by default.

2.0.9:
    * Add PHP/JS support (thanks @sloanlance).
    * Add C#/F# support (thanks @breiter).
    * Compile with XCode 9.0 targeting 10.13.

2.0.8:
    * Remove bash_ref_linuxmanpages_com plugin.

2.0.7:
    * Correct autodetect path on 10.11 (thanks @cc941201).
    * Correct LaTeX and Arduino support.

2.0.6:
    * Add Logos source file support (as plain text).
    * Add ViM Scripts source file support.
    * Code is now GPL 3.
    * Add the ability to use an optional theme only for thumbnails (thanks @vilhelmen).
    * Autodetect "highlight" path (thanks @saagarjha).

2.0.5:
    * Lots of minor changes

2.0.4:
    * Update the XCode Project to 10.8
    * Add a new setting to specify the HL path (/opt/local/bin/highlight by default).
    * Update the script "colorize.sh" to obtain ZSH by the environment rather than an hardcoded path.
    * Update the script "colorize.sh" to call ZSH by "zsh -f" rather than simply "zsh".
    * Correct some code according to CLang static analyzer.
    * Add some other formats to render.

2.0.2:
    * Modified ReadMe.txt to include the latest info on the Xcode 3.2 conflict
    * Include a link to Andre Simon's page with previews of color styles

2.0.1:
    * Corrected build of Highlight to run on Leopard.
    * Stop redirecting stdout of colorize.sh to stdin.  Error output will appear
      in the console instead of the preview.
    * Added qlcc_debug option.  To enable, use:
            defaults write org.n8gray.qlcolorcode qlcc_debug 1
      To disable, use:
            defaults delete org.n8gray.qlcolorcode qlcc_debug

2.0:
    * Added a note about conflict with Xcode 3.2's source code QL plugin.  If
      you're having problems with QLCC on Snow Leopard please read it!
    * Fixed a bug that caused QLCC to fail on files whose names contained '%'.
    * Added support for Scala, Groovy, Interactive Data Language, and Coldfusion
    * Upgrade highlight from 2.6.6 to 2.12 -- This was long overdue.  It's nice
      not to have to patch highlight anymore!
    * Removed customized .css language definition -- it was fixed upstream.
    * Build for x86_64 in addition to i386 and ppc

1.1:
    * Enabled "safe" plain-text handling.  In other words, files like foo.txt
      will be supported, but not files without extensions.  The only way to
      handle extensionless files is to handle *everything*.  This can be done,
      but it requires a more defensive style of operation.
    * Added support for "textEncoding" option to set encoding for highlight
      portion of renderer, with default UTF-8.
    * Added support for "webkitTextEncoding" option to set encoding for webkit
      portion of renderer, with default UTF-8.
    * Added support for .cs, .el, .jnlp (xml), .e (eiffel), and .vb
    * Fixed support for verilog files

1.0:
    * Hopefully fixed the crasher bug by keeping us single-threaded
    * Added Actionscript, Lisp, IDL, Verilog, VHDL, XHTML  (any others I forgot?)
    * Added .cls and .sty as LaTeX extensions
    * Added maxFileSize option to keep us from hanging on huge files.

0.4:
    * Added Tcl, Lua, and JSP support
    * Can now configure appearance with "defaults write org.n8gray.QLColorCode ..." commands
    * Improved OCaml, C/C++ and Obj-C modes.

0.3:
    * Ensure highlight is compiled as a universal binary
    * If highlight fails to colorize a file render it as plain text
    * Added .command as an alternate extension for shell scripts
    * Added .mll and .mly extensions for OCaml
    * Include customized .css and .c language definition files
    * Created a slateGreen theme that matches my editor colors.  :-)

0.2:
    * Switched from Pygments to Highlight.  This should increase speed *and* language coverage.
    * Added thumbnailing support
    * Changed .tex UTI to agree with TeXShop's.
    * (Try to) let the system pick a different plugin if ours fails
    * Added UTIs for .css, .sql, .erl, and .sml

0.1: Initial release
