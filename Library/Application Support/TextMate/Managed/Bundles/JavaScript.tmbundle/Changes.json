{"commits":[{"commit":"fccf0af0c95430a42e1bf98f0c7a4723a53283e7","date":"2017-08-04T03:06:01-05:00","author":"Michael Sheets","summary":"Require word boundary after class keyword","body":"Fixes #59."},{"commit":"a9177d63fd602f6e8653885e3e3037d2513efbbc","date":"2017-02-27T22:15:20+01:00","author":"Martin Kühl","summary":"Fix class extending imported parent","body":"Classes can extend parent classes imported from modules, with syntax like\n\n```javascript\nclass MyComponent extends React.Component …\n```\n\nThe current grammar doesn’t allow parent class names containing periods.\nThis change lets them."},{"commit":"f583963854bd1abaed0cee2964e86cffd5ed0452","date":"2017-02-27T22:10:16+01:00","author":"Martin Kühl","summary":"Match the new async/await keywords","body":"This change adds support for the new keywords `async` and `await`,\nwhich are on track to become part of the next ECMAScript spec[1].\n\n[1]: https://tc39.github.io/ecmascript-asyncawait/"},{"commit":"7dbb47e7c9de73a471d80bda88091ee378db7048","date":"2017-02-27T21:56:06+01:00","author":"Martin Kühl","summary":"Add arrow function snippet"},{"commit":"feadd20fa0dba568f68fa755763adac7c7917bcb","date":"2017-01-20T21:03:04-06:00","author":"Pat Gaffney","summary":"Add support for class-inheritance-from expressions"},{"commit":"746c2be0bbd269938df8763573cdd6674b4284b9","date":"2017-01-19T23:38:35-06:00","author":"Pat Gaffney","summary":"Add support for the spread operator"},{"commit":"d32c4ce1ef21e81613838efc0a162fe89aabf08e","date":"2017-01-19T23:35:10-06:00","author":"Pat Gaffney","summary":"Add support for function rest parameters"},{"commit":"a25c4879b77c1fecd68712fb1e1a02e5516b68ec","date":"2017-01-19T22:45:26-06:00","author":"Pat Gaffney","summary":"Add support for default function parameters","body":"This has the side effect of moving meta.function-call.js into the\nrepository as #function-call --- it must be there in order to be\nincluded inside #function-params."},{"commit":"7a7039a061ac4b77f3f5186395f0f851dd4f292c","date":"2017-01-19T21:12:09-06:00","author":"Pat Gaffney","summary":"Add support for missing ES6 built-in objects"},{"commit":"7c7d446dc1340295d736b569fd27d633878ed87a","date":"2017-07-30T22:49:49-05:00","author":"Michael Sheets","summary":"End import statement at line comment","body":"Fixes #52."},{"commit":"f89654a984e7bb7c4e7c57e113783cb357d87be1","date":"2017-06-13T00:15:22+02:00","author":"Stefan Daschek","summary":"Add JS-specific “Toggle Quote Style” command.","body":"This overrides the generic “Toggle Quote Style” command from the Source bundle. It toggles between single quotes / double quotes / template strings.\n\n(Implementation copied and adapted from the Ruby bundle.)"},{"commit":"d5ed27f95bd1a9c89e2ac74c9483ccf5e52d1407","date":"2016-07-30T19:00:40-05:00","author":"Michael Sheets","summary":"Add snippet to insert `${}` in template strings","body":"Also add macro to overwrite the `}` at the end when applicable."},{"commit":"91bb8216a2f01b727bd7a4f05097179a0791a1f2","date":"2016-07-30T15:10:17-05:00","author":"Michael Sheets","summary":"Change documentation tags to keyword.other.documentation","body":"This matches what is used in JavaDoc."},{"commit":"ce865b6c2d7f3747b0665f0cb893e04cb6946cdf","date":"2016-07-30T15:03:03-05:00","author":"Michael Sheets","summary":"Do not allow documentation comments to start with `/***`","body":"Using more than two * is not allowed by JSDoc."},{"commit":"f3426a8fe1c35f4f17ea20563fe9faf67dd62efd","date":"2016-07-30T10:21:52-05:00","author":"Michael Sheets","summary":"Move interpolation and escapes into local repository"},{"commit":"eac4b920e1ad70d445e74785fae9894daa5a8988","date":"2016-07-30T10:05:35-05:00","author":"Michael Sheets","summary":"Add documentation tags from JSDoc","body":"Taken from atom/language-javascript."},{"commit":"6d25f14fd49d75e60a8d9e6a75331be92d079924","date":"2016-07-29T15:42:18-05:00","author":"Michael Sheets","summary":"Scope block documentation comments","body":"This matches the format used in JSDoc and YUIDoc, among others."},{"commit":"b6abca715677c3c2aa125e27b46b1bb40704a6ed","date":"2016-07-27T14:04:52-05:00","author":"Michael Sheets","summary":"Cleanup class match to allow use of entity.other.inherited-class"},{"commit":"a50f59ef39c70a339d1c8156e363d7ea2000dbbe","date":"2016-07-27T11:27:32-05:00","author":"Michael Sheets","summary":"Match extends as illegal when used out of context"},{"commit":"3837a13300a6f64cf7c6fa866d40dbb22d443c96","date":"2016-07-27T11:23:38-05:00","author":"Michael Sheets","summary":"Correct scope of object literal keys"},{"commit":"b084705c4cf830870cddebb632c6400b0ae655c9","date":"2016-07-27T11:12:08-05:00","author":"Michael Sheets","summary":"Move object literal keys and function variables out of injections","body":"With the improvements to ternary-if blocks these rules no longer need the special exclusion."},{"commit":"3b47329e58fddbec23de5eb08b69221a0ce14df4","date":"2016-07-27T11:05:32-05:00","author":"Michael Sheets","summary":"Remove special handling inside of ternary-if","body":"With recent change to ternary-if capturing this is no longer required."},{"commit":"fb14e456a4a491f2bec2d72362078e66053f5f6a","date":"2016-07-27T10:57:24-05:00","author":"Michael Sheets","summary":"Match ternary-if before operators","body":"This was broken previously. Now matches the area between `?` and `:` as a capture group in some cases to prevent false positives with other uses of `:` such as property notation."},{"commit":"1819a67ca0e2033748efff95b59c4b55f7b70b68","date":"2016-04-10T10:28:33-04:00","author":"Eric Laberge","summary":"Add support for Unity3d WebGL native plugin types","body":"As per http://docs.unity3d.com/Manual/webgl-interactingwithbrowserscripting.html\nand\nhttps://unity3d.com/unity/whats-new/unity-5.2"},{"commit":"0fdb380172bc1093930ba7cbcff71d875fde93e3","date":"2016-04-06T17:17:12+01:00","author":"CentricStorm","summary":"Improve class name scope (entity.name.type.class)"},{"commit":"1e4d217f8ddda3df482d88110fdacfcabf38f259","date":"2016-02-11T19:41:14+03:00","author":"Maxim Sokolov","summary":"Use begin/end match for curly brackets"},{"commit":"77f55f30b45f376f60466b69afd8106ffb76e22b","date":"2016-01-20T23:46:09-05:00","author":"Spencer-Easton","summary":"Add `gs` to fileTypes (Google Apps Script)","body":"Google Apps Script is a JavaScript based scripting language for the Google Apps platform, `.gs` is the file extension used."},{"commit":"f137ff009d9e005ef90b708ce7766a8f6a500383","date":"2016-01-18T14:55:18+03:00","author":"Maxim Sokolov","summary":"Match round brackets as a block","body":"Discussed in atom/language-javascript#304"},{"commit":"c1b8daeb5acce212815c3d07509eb3ef3a42b73c","date":"2015-12-05T16:04:21-07:00","author":"Luke","summary":"Add case snippet"},{"commit":"bec006fe9a29051fdb7f652bd26dee6d9a9c75d0","date":"2015-12-02T20:39:55-05:00","author":"Wliu","summary":"Scope let and var as storage.type.var","body":"Refs atom/language-javascript#206"},{"commit":"74aae791220441a885375a60735d03540b3fe409","date":"2015-11-25T17:58:11-05:00","author":"Aseem Kishore","summary":"Add `json5` to fileTypes (JSON5)","body":"JSON 5 is a strict subset of JavaScript and thus suitable for highlighting with this grammar for now. Not backwards compatible with standard JSON."},{"commit":"52f33fa55d78baa5a31a11c47fa3f4ce10a23663","date":"2015-11-23T19:57:02+03:00","author":"Maxim Sokolov","summary":"Fix &#39;this&#39;, &#39;super&#39;"},{"commit":"d7abb8f980af3e4109507009c392c8a18cf47bb0","date":"2015-11-17T21:30:48+01:00","author":"Petr Huřťák","summary":"Snippets: Convert snake_case to camelCase, remove comments"},{"commit":"ec4119bdc806375f3827f108fb79138e4e4e764b","date":"2015-11-17T14:51:27+01:00","author":"Petr Huřťák","summary":"Improve function snippet","body":"- `function_name` renamed to `functionName` because camelCase is more common in JavaScript world\n- removed `argument` while keeping tab stop\n  - improves writing of functions with no parameters\n  - does not change writing of functions with 1+ parameters\n- removed comment `// body ...` because it sometimes slows us down when we are not using tab stops, if we are using tab stops experience is the same\n\nhttp://i.imgur.com/6qsHRim.gif"},{"commit":"7906456046671a5cd1ed875675f8dd24fab3d55b","date":"2015-11-17T00:46:39-08:00","author":"Eli Clemente Gordillo Foster","summary":"Add `jscad` to fileTypes (OpenJsCad)"},{"commit":"ba0cedc1f905a8699dfe5a1da51d2c90272d1e90","date":"2015-11-05T12:05:24-05:00","author":"Wliu","summary":"Don&#39;t tokenize numbers that follow a $ or _","body":"Fixes atom/language-javascript#234"},{"commit":"d7a2363117dd9bfdd6a82fef81f5df65f16c8121","date":"2015-11-05T10:36:38-05:00","author":"Wliu","summary":"Capture regular braces before ending interpolation","body":"Fixes atom/language-javascript#199"},{"commit":"4e909c8c97dfa2cdcb335499d2aa703f322200c0","date":"2016-07-26T12:31:02-05:00","author":"Michael Sheets","summary":"Reorder regex string rule to appear before operators","body":"This prevents the division operator from overriding."},{"commit":"1f13082b18cc7ecedbe0862976c9bc48525e0aff","date":"2015-09-17T23:24:30+03:00","author":"Maxim Sokolov","summary":"Remove `&lt;&gt;` operator"},{"commit":"4485afa9217e82f1fa18f06a7c2290affb4d0e3c","date":"2015-09-17T22:20:22+03:00","author":"Maxim Sokolov","summary":"Scope bitwise operators as `keyword.operator.bitwise`"},{"commit":"c8b70b85f8cbaca8d98f7186f6f19454c62cecf6","date":"2015-09-17T23:17:31+03:00","author":"Maxim Sokolov","summary":"Scope comparison operators as `keyword.operator.comparison`"},{"commit":"9ebe5d294f6ddc7db6eb8ecef2df6eb6f4a4483a","date":"2015-09-17T23:20:47+03:00","author":"Maxim Sokolov","summary":"Scope logical operators as `keyword.operator.logical`"},{"commit":"9db814ebe9c70f3fc3dfa0c98eb7a09e441049e4","date":"2015-09-17T23:21:52+03:00","author":"Maxim Sokolov","summary":"Scope bitwise assignment as `…assignment.compound.bitwise`"},{"commit":"af3e4fe68f7ed9a29dd57c09250bf56c131a6e68","date":"2015-11-02T16:01:06+03:00","author":"Maxim Sokolov","summary":"Scope compound assignment operators as &#39;assignment.compound`"},{"commit":"c2b7b26a05740da67cf4a483badc4db624fe7750","date":"2015-09-23T20:34:24+03:00","author":"Maxim Sokolov","summary":"Scope `:` as `keyword.operator.assignment`"},{"commit":"5e65169fe03b653010fc1123406d89af7c34efba","date":"2015-09-23T20:11:18+03:00","author":"Maxim Sokolov","summary":"Scope `=` as `keyword.operator.assignment`"},{"commit":"1a9f038095a312d06db78436a1814b2b994b9a78","date":"2015-09-23T19:45:22+03:00","author":"Maxim Sokolov","summary":"Separate out `--`, `++` as `keyword.operator.(in|de)crement`"},{"commit":"2d8b6fc02087d2154f23405fd33e673e57427e46","date":"2015-10-23T13:44:34+03:00","author":"Maxim Sokolov","summary":"Separate out keyword.operator.arithmetic"},{"commit":"45a78c8c5e2fea5a53f0d05d55c93463ac96ff46","date":"2016-07-25T21:53:34-05:00","author":"Michael Sheets","summary":"Require a `/` later in the line to start a regex string","body":"This is to prevent false positives with the `/` operator."},{"commit":"5881a9c2803cd35ec962bb7e56e314e852572dcd","date":"2016-07-25T21:51:31-05:00","author":"Michael Sheets","summary":"Allow regexp strings to follow `=&gt;`"},{"commit":"308e2126861971c6a461409dd61f7568d84ff1b6","date":"2015-10-27T00:30:51-04:30","author":"Alexander J. Salas B","summary":"Add proxy auto-config (PAC) to fileTypes"},{"commit":"bae9b91fbac08d143a23e6b89b331502d08e98e2","date":"2015-10-26T21:13:10+03:00","author":"Maxim Sokolov","summary":"Don&#39;t confuse exported default object with named exports","body":"Fixes atom/language-javascript#244"},{"commit":"f1e0d9499d9171eb2eb6854ab3c65c52d29f5d77","date":"2015-10-07T13:55:06+03:00","author":"Maxim Sokolov","summary":"Add ES6 &#39;export&#39; support"},{"commit":"e80ffec5c9dc33222c294ab876f4ca34fe85dc66","date":"2016-07-25T21:10:41-05:00","author":"Michael Sheets","summary":"Move operator match into repository item"},{"commit":"151ccc62a3a8c9d3aba6da84fa06cf69660da1bf","date":"2016-07-25T20:54:52-05:00","author":"Michael Sheets","summary":"Move numeric literals into a repository item"},{"commit":"36a5ef0e16e1cb628c6c91925da112a38b9e1911","date":"2015-10-07T13:49:19+03:00","author":"Maxim Sokolov","summary":"Improve ES6 &#39;import&#39; support"},{"commit":"8c2fa72bd9dea6e3a9890d4aa004fb79c12cedec","date":"2016-07-25T18:38:35-05:00","author":"Michael Sheets","summary":"Add export keyword"},{"commit":"b5ee1d5c30729f60781bce759abccdea5e9cd4f0","date":"2016-07-25T17:39:31-05:00","author":"Michael Sheets","summary":"Highlight unescaped multiline strings as invalid","body":"Based on a commit originally from @pchaigno"},{"commit":"bf1fe66e2c514cfbb10d33af7cd59ca74650426c","date":"2015-04-05T08:45:37+02:00","author":"Lars Hvam","summary":"Add extensions xsjs + xsjslib","body":"Javascript file extensions for SAP HANA XS engine, see http://help.sap.com/hana/SAP_HANA_XS_JavaScript_Reference_en.pdf\n\nAlready part of https://github.com/github/linguist/blob/master/lib/linguist/languages.yml"},{"commit":"7e065ac904d3966221a4783b26119dfe8b86cbec","date":"2015-08-01T20:51:50-04:00","author":"Wliu","summary":"Allow +/- in front of numeric literals"},{"commit":"c9afd5ff497723b5febabfb18f31cf61cad3d077","date":"2016-07-25T16:38:16-05:00","author":"Michael Sheets","summary":"Add const keyword to storage.modifier"},{"commit":"c11c1e4c5beaac50bd93bad4fb732380df00f584","date":"2015-07-09T12:07:15-07:00","author":"Robert Helmer","summary":"Add JSM file as an extension","body":"`.jsm` files are Javascript modules used by Firefox and extensions:\n\nhttps://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules"},{"commit":"82e95ae981967db5c2a5b925f9e0d60661a2e3c2","date":"2016-07-25T16:24:51-05:00","author":"Michael Sheets","summary":"Allow comments in function arguments","body":"Discussed in atom/language-javascript#113"},{"commit":"5fcedf22da0bd4c512b159417f50519f1958ce52","date":"2016-07-25T16:24:48-05:00","author":"Michael Sheets","summary":"Move comment rules into repository item"},{"commit":"d4af225f01e10282cb208204f314d86f963cb34b","date":"2016-07-25T14:01:11-05:00","author":"Michael Sheets","summary":"Support static class methods","body":"Mark other uses of static keyword invalid."},{"commit":"2d8bccfbedec82d5a71a23bbafea973e7a4460ce","date":"2016-07-25T12:58:32-05:00","author":"Michael Sheets","summary":"Match function keyword as illegal in unrecognized contexts"},{"commit":"62408c2e2d60f31cbab30f1d48f253350d163c5a","date":"2016-07-25T12:33:16-05:00","author":"Michael Sheets","summary":"Match empty classes","body":"Also match keyword as it&#39;s being entered, match other uses as invalid."},{"commit":"e04143e20fcd96f8b7f392a94f58a07f6da08804","date":"2016-07-25T12:23:35-05:00","author":"Michael Sheets","summary":"Update reserved keywords for ECMAScript 7"},{"commit":"516763530f0a35af9d8e6bd09afc33d1a436bc4c","date":"2016-07-25T10:40:35-05:00","author":"Michael Sheets","summary":"Update to 1.6.3 of JS Beautifier","body":"Fixes #46"},{"commit":"86e316884973f1975d739eb9fda7a922e641cc9c","date":"2015-04-07T17:07:31+06:00","author":"Alexey Malinin","summary":"Add methods support","body":"Discussed in atom/language-javascript#115"},{"commit":"13e946962fce87cfd91222296b31e1e9a0945e31","date":"2016-07-24T23:49:09-05:00","author":"Michael Sheets","summary":"Allow comments to follow import statements","body":"Discussed in AMalininHere/language-javascript-better#13"},{"commit":"0041fa637ab9ee8cfd5136162c5fa3832ef66ce1","date":"2015-03-29T00:05:57+01:00","author":"Hurtak","summary":"Rename parameter in try catch snippet from variable to e"},{"commit":"02d9e5926bafbda09b0b60e5832ef8dae31f5594","date":"2015-03-29T00:03:44+01:00","author":"Hurtak","summary":"Remove useless statement variables from try snippet"},{"commit":"ce0554243c4faa6c55e48bf62beb1df6620e2e48","date":"2015-03-28T02:23:45+06:00","author":"Alexey Malinin","summary":"Change yield support"},{"commit":"1fa024dfcc52d3f907375cb1f89723c882228ed5","date":"2015-03-28T01:53:35+06:00","author":"Alexey Malinin","summary":"Add ES6 class snippet"},{"commit":"c0fb3eb4b3fbcd56426d24d4aeb8b963d2069838","date":"2015-03-28T01:47:05+06:00","author":"Alexey Malinin","summary":"Add ES6 import support"},{"commit":"2698196b65c80a3cb71fceece6c5635cce13833b","date":"2015-03-28T01:44:36+06:00","author":"Alexey Malinin","summary":"Moved strings into repository block"},{"commit":"48501e2a0df3ee8318a2fa634fdf080aeb8b4cf6","date":"2015-03-28T01:37:17+06:00","author":"Alexey Malinin","summary":"Add .es extension to fileTypes"},{"commit":"51ff055563efb51868c72b725253818442a92ced","date":"2015-03-28T01:27:29+06:00","author":"Alexey Malinin","summary":"ES6 class support"},{"commit":"4d5a3acecf6a706bfea13e85bed7d9a25449a5f0","date":"2015-02-24T13:44:24+05:00","author":"Alexey Malinin","summary":"Add &#39;for of&#39; snippet"},{"commit":"1694aa1cf3f8b03e07209c802c446fcc38a41d29","date":"2015-02-22T21:23:53+05:00","author":"Alexey Malinin","summary":"Highlighting &#39;of&#39; as operator for &#39;for of&#39; cycles","body":"In ES6 was created new &#39;for of&#39; cycles"},{"commit":"fb80cda05c16c809e5fcb479d768f4e1b58a2f04","date":"2014-12-12T15:13:22+01:00","author":"Mathias Bynens","summary":"Support ES6 regular expression flags `u` and `y`"},{"commit":"2994f99dd43607fd0ca971accc6df646645177b9","date":"2014-12-12T11:49:06+01:00","author":"Mathias Bynens","summary":"Add support for new ES6 numeric literals","body":"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-numeric-literals\n\nBinaryIntegerLiteral ::\n  0b BinaryDigits\n  0B BinaryDigits\n\nBinaryDigits ::\n  BinaryDigit\n  BinaryDigits BinaryDigit\n\nBinaryDigit :: one of\n  0 1\n\nOctalIntegerLiteral ::\n  0o OctalDigits\n  0O OctalDigits\n\nOctalDigits ::\n  OctalDigit\n  OctalDigits OctalDigit\n\nOctalDigit :: one of\n  0 1 2 3 4 5 6 7"},{"commit":"93c99cd533b05d834c30be317edeb325afec6f27","date":"2014-11-19T18:12:49+01:00","author":"igor milla","summary":"Add bitwise XOR (^) to the list of keywords"},{"commit":"6795eb4f6aecfeab04d41f5d98af6b46b41d3ac9","date":"2016-02-09T23:24:00+01:00","author":"Stefan Daschek","summary":"Add support for ES6 template strings","body":"Discussed in and fixes #45"},{"commit":"061136f35eb94fc495fc7137c2846495d3df69d0","date":"2014-09-16T17:56:16-07:00","author":"Kevin Sawicki","summary":"Add + to character class for regex look-behind","body":"Closes atom/language-javascript#54"},{"commit":"c9e47c7468d049a563f634698974ad3ad7d299ab","date":"2014-07-10T20:40:11-07:00","author":"Jason H","summary":"Treat with as a control keyword","body":"Discussed in atom/language-javascript#44"},{"commit":"8301ba18ebd51ba39f765497992d44bc51c8a01e","date":"2014-07-03T09:45:59-07:00","author":"Kevin Sawicki","summary":"Tokenize regular expressions when inside arrays","body":"Closes atom/language-javascript#40"},{"commit":"3a280dc6678f4ca2dfc4cfead32c2abd5bd596af","date":"2014-05-05T22:37:14-07:00","author":"Adrian Lee","summary":"Fix not parsing &#39;:&#39; properly"},{"commit":"d985a55a892a68428d46c7ac862bc6ac49ce54fc","date":"2014-02-27T11:04:35-05:00","author":"Joe Fiorini","summary":"Support es6 files as javascript","body":"The `ember-appkit-rails` library uses the `.es6` extension to support ES6\nmodules. Adds support for this type."},{"commit":"27cf358452fb7e1a42417c4ce875c821310edce5","date":"2014-02-27T12:22:08-05:00","author":"Aseem Kishore","summary":"Add support for Streamline ._js files","body":"https://github.com/Sage/streamlinejs\n\nLike https://github.com/atom/language-coffee-script/commit/74b6b56de5b05e959f0f5df659b306400f5b0a87."},{"commit":"7542f2270d95f42fac63335315ee2d3792c9eda8","date":"2016-07-24T17:43:05-05:00","author":"Michael Sheets","summary":"Add firstLineMatch for node and iojs"},{"commit":"60253f4140d9bc57045cea789cc7133129f2c617","date":"2015-11-23T01:38:45-06:00","author":"Michael Sheets","summary":"Change function calls from meta.function to meta.function-call","body":"Some themes target this scope for coloring, while not a standard it has been used in many other grammars."}],"name":"JavaScript"}