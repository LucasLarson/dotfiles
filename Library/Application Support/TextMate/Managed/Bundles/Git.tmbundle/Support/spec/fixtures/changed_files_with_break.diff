diff --git a/Commands/Compare Branches.tmCommand b/Commands/Compare Branches.tmCommand
index c65fcef..98bef86 100644
--- a/Commands/Compare Branches.tmCommand	
+++ b/Commands/Compare Branches.tmCommand	
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
 	<key>beforeRunningCommand</key>
@@ -8,10 +8,9 @@
 	<string>#!/usr/bin/env ruby -wKU
 
 require ENV['TM_BUNDLE_SUPPORT'] + '/lib/git.rb'
-require ENV['TM_SUPPORT_PATH'] + '/lib/escape.rb'
 require ENV['TM_SUPPORT_PATH'] + '/lib/osx/plist'
 
-git = SCM::Git.new
+git = SCM::Git::Diff.new
 path = File.expand_path('..', git.git_dir(git.paths.first))
 
 branches   = git.branches(path)
@@ -22,12 +21,14 @@ res   = open('|"$DIALOG" -w' + token)               { |io| OSX::PropertyList.loa
         open('|"$DIALOG" -x' + token)               { |io| }
 
 if res &amp;&amp; res['returnArgument']
-  parrent = res['returnArgument'].first['name']
+  parent = res['returnArgument'].first['name']
   current = res['currentBranch'].first['name']
-  puts "&lt;h1&gt;Compare ‘#{parrent}’ With ‘#{current}’&lt;/h1&gt;\n&lt;pre&gt;"
-  Dir.chdir(path)
-  puts htmlize(%x{#{e_sh git.git} diff #{e_sh parrent} #{e_sh current}})
-  puts "&lt;/pre&gt;"
+
+  results = git.diff_branches(parent, current)
+  Formatters::Diff.new do |f|
+    f.header "Compare ‘#{parent}’ With ‘#{current}’"
+    f.content(results)
+  end
 end
 </string>
 	<key>input</key>
diff --git a/Commands/Show Uncommitted Changes.tmCommand b/Commands/Show Uncommitted Changes.tmCommand
index 18a505b..af13ba3 100644
--- a/Commands/Show Uncommitted Changes.tmCommand	
+++ b/Commands/Show Uncommitted Changes.tmCommand	
@@ -15,7 +15,7 @@ base = git.nca(paths)
 Formatters::Diff.new(base) do |f|
   paths.each do |path|
     f.header("Uncommitted Changes for ‘#{htmlize(shorten(path, base))}’")
-    f.content(git.diff(path, base))
+    f.content(git.diff_file(ENV["TM_PROJECT_DIRECTORY"], base))
   end
 end</string>
 	<key>input</key>
diff --git a/Support/lib/commands/diff.rb b/Support/lib/commands/diff.rb
index e613549..fb31ef2 100644
--- a/Support/lib/commands/diff.rb
+++ b/Support/lib/commands/diff.rb
@@ -1,7 +1,12 @@
 class SCM::Git::Diff
   include SCM::Git::CommonCommands
-    
-  def diff(file, base = nil)
+  
+  def diff_branches(branch_left, branch_right)
+    Dir.chdir(path)
+    parse_diff(command("diff", branch_left, branch_right))
+  end
+  
+  def diff_file(file, base = nil)
     base = File.expand_path("..", git_dir(file)) if base.nil?
     Dir.chdir(base)
     file = '.' if file == base
@@ -12,6 +17,7 @@ class SCM::Git::Diff
     output = []
     current = nil
     ln_left, ln_right = 0,0
+    # puts "<pre>#{htmlize(diff_content)}</pre>"
     diff_content.split("\n").each do |line|
       case line
       when /^diff \-\-git/
@@ -21,18 +27,21 @@ class SCM::Git::Diff
         current[:index_start] = $1
         current[:index_end] = $2
         current[:index_mode] = $3
-      when /^\-\-\- [ab]{0,1}(.+)/
+      when /^\-\-\- [ab]{0,1}(.+?)(\t*)$/
         current[:left][:file_path] = $1
-      when /^\+\+\+ [ab]{0,1}(.+)/
+      when /^\+\+\+ [ab]{0,1}(.+?)(\t*)$/
         current[:right][:file_path] = $1
-      when /@@ \-(\d+),(\d+) \+(\d+),(\d+) @@ (.*)$/  # @@ -5,6 +5,25 @@ class SCM::Git::Diff
+      when /@@ \-(\d+),(\d+) \+(\d+),(\d+) @@ {0,1}(.*)$/  # @@ -5,6 +5,25 @@ class SCM::Git::Diff
         ln_left = $1.to_i
         ln_left_count = $2.to_i
         ln_right = $3.to_i
         ln_right_count = $4.to_i
-        current[:left][:line_numbers] = ln_left..(ln_left + ln_left_count)
-        current[:right][:line_numbers] = ln_right..(ln_right + ln_right_count)
+        current[:left][:ln_start] ||= ln_left
+        current[:right][:ln_start] ||= ln_right
+        current[:left][:ln_end] = ln_left + ln_left_count
+        current[:right][:ln_end] = ln_right + ln_right_count
         current[:first_line] = $5
+        current[:lines] << {:type => :cut, :ln_left => nil, :ln_right => ln_right, :text => "" } unless current[:lines].empty?
       when /^\+(.*)$/ # insertion
         current[:lines] << {:type => :insertion, :ln_left => nil, :ln_right => ln_right, :text => $1 }
         ln_right += 1
diff --git a/Support/lib/formatters/diff.rb b/Support/lib/formatters/diff.rb
index 3653db3..e60a4cd 100644
--- a/Support/lib/formatters/diff.rb
+++ b/Support/lib/formatters/diff.rb
@@ -1,8 +1,8 @@
 class Formatters::Diff
   include Formatters::FormatterHelpers
   
-  def initialize(base, &block)
-    @base = base
+  def initialize(base = nil, &block)
+    @base = base || ENV["TM_PROJECT_DIRECTORY"]
     
     puts <<-EOF
     <html>
@@ -27,7 +27,11 @@ class Formatters::Diff
   def content(diff_results)
     puts '<code>'
     diff_results.each do |diff_result|
-      files = [:left, :right].map{|lr| diff_result[lr][:file_path] || " - none - "}
+      files = [:left, :right].map do |lr|
+        file_path = diff_result[lr][:file_path]
+        start_line_right = diff_result[:right][:ln_start]
+        file_path ? "<a href='txmt://open?url=file://#{e_url File.join(@base, file_path)}&line=#{start_line_right}'>#{htmlize file_path}</a>" : " - none - "
+      end
       puts <<-EOF
       <h4>#{files.uniq * ' / '}</h4>
       <table class='codediff inline'>
diff --git a/Support/lib/git.rb b/Support/lib/git.rb
index 60067f0..1c8c6a5 100644
--- a/Support/lib/git.rb
+++ b/Support/lib/git.rb
@@ -18,6 +18,12 @@ module SCM
       def sources
         command("remote").split("\n")
       end
+
+      def branches(git_file)
+        base = File.expand_path("..", git_dir(git_file))
+        Dir.chdir(base)
+        %x{#{e_sh git} branch}.split("\n").map { |e| { :name => e[2..-1], :default => e[0..1] == '* ' } }
+      end
       
       def git
         git ||= e_sh(ENV['TM_GIT'] || 'git')
@@ -103,12 +109,6 @@ module SCM
     include CommonCommands
     extend CommonCommands
 
-    def branches(git_file)
-      base = File.expand_path("..", git_dir(git_file))
-      Dir.chdir(base)
-      %x{#{e_sh git} branch}.split("\n").map { |e| { :name => e[2..-1], :default => e[0..1] == '* ' } }
-    end
-
     def create_branch(name, git_file)
       base = File.expand_path("..", git_dir(git_file))
       Dir.chdir(base)
