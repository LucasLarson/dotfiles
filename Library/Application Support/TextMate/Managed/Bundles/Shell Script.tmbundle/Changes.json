{"commits":[{"commit":"887b1c95fc1f8ec608e2f1e6f1cabe72d1807f57","date":"2018-02-27T19:41:21+01:00","author":"Stefan Daschek","summary":"Fix “Run in Terminal” for macOS High Sierra","body":"It seems that in High Sierra, `count tabs` for the Terminal app always returns 1 (probably a bug?). So this can no longer be used for checking if the new tab is ready.\n\nInstead we now wait until the content of the visible tab has changed, which seems to work fine"},{"commit":"1c0cc0b904bb87b18b6987109e694f9d0058656d","date":"2017-09-22T02:41:13+02:00","author":"Martin Kühl","summary":"Reduce extent of comments inside command substitution","body":"Inside command substitution blocks, we currently\n* miss comments that start immediately (i.e. after `\\`` or `$(`)\n* miss the interpolation ending (because comments end on line breaks)\n\nThis change fixes that by adding specialised patterns inside command\nsubstitution blocks that respect the block&#39;s bounds.\n\nCloses #44"},{"commit":"adafbd32ff4a40e3aac910a9088df0e9c8e30eaf","date":"2017-09-19T20:43:54+02:00","author":"Martin Kühl","summary":"Merge pr/42 into master"},{"commit":"5e3d8ac8a35d7b3fab1f619647ce291dc839efd9","date":"2017-09-19T20:43:15+02:00","author":"Martin Kühl","summary":"Avoid using temporary files"},{"commit":"c23c9e472b681db58d7f982f616144b8a34c5ee4","date":"2017-09-01T10:16:13+01:00","author":"Martin Kühl","summary":"Ending keywords can be followed by closing parens","body":"Closes #39"},{"commit":"742cbc8b0aef57640cd225c4a233ffb5fc2a06eb","date":"2017-08-20T12:02:58+02:00","author":"Stefan Daschek","summary":"“Documentation for Word”: Prompt for input if no current word"},{"commit":"5d3f3adae025872bf1c6c62b0a4585693099919d","date":"2017-08-19T23:04:19+02:00","author":"Stefan Daschek","summary":"Improve reliability of tab creation (even more)","body":"Wait until the number of tabs in the terminal application has changed before executing the shell command. Abort after 2 seconds, if no new tab seems to have appeared.\n\nThis fixes a race condition where the new tab was opened but the shell command was still run in the previous open tab.\n\nIt does not fix the problem with the user not releasing the modifier keys used to initiate the command, though (see https://github.com/textmate/shellscript.tmbundle/commit/32af606a9e4e56707d1be4569947a516aa20bc64). But if this happens, we now at least do not try to run the shell command in an existing tab."},{"commit":"bb53de05e143ddd823c939fdbb8dbd0109716c54","date":"2017-08-19T23:03:26+02:00","author":"Stefan Daschek","summary":"Convert tabs to spaces"},{"commit":"ba95d7b742caef130911d878f42f66bdd80181e4","date":"2017-03-15T17:08:29+01:00","author":"Martin Kühl","summary":"Require terminator before function definition","body":"The current grammar assumes it found a function whenever it encounters the keyword `function` followed by any word, which is too aggressive and can lead to false positives.\nThis change requires that the function definition is preceded by a terminator (`^|;|&amp;`) and (optional) whitespace.\n\nThis approach can still produce false positives (it doesn’t recognise when the line break was escaped, for example) but should work well enough.\nIt also now includes the preceding whitespace in the `meta.function.shell` scope (due to the limitations on variable-width look-behinds), which I don’t like but also don’t see a way around.\n\nWe might want to consider doing something similar for loop constructs.\n\nCloses #36"},{"commit":"ed8de7e84e850232c1531e69b2eaff6c797259a2","date":"2017-03-15T17:05:15+01:00","author":"Martin Kühl","summary":"Support line continuations inside complex commands"},{"commit":"ccc727225a5c190cb0f5d08fa2ce2cbfa96e6645","date":"2017-01-30T12:53:48+01:00","author":"Martin Kühl","summary":"Improve case block indentation","body":"Add regex matching the most common case-pattern variant `&lt;text&gt;)` to both `increaseIndentPattern` *and* `decreaseIndentPattern`.\nThis results in case blocks being indented relative to the case statement and case patterns staying on the same indentation, matching the default case…esac snippet.\n\nA user who wishes to indent the whole case body by an additional level can adapt the snippet, the indentation rules will support that style while typing. The “Indent Selection” command will still revert to the original style though.\n\nCloses #24"},{"commit":"2677fdc83ed9d6a517d5d204e003f49141fc72e4","date":"2016-11-03T13:48:43+01:00","author":"Martin Kühl","summary":"Allow whitespace in here-docs and here-strings","body":"Bash allows whitespace after the here-doc and here-string &quot;operators&quot; (`&lt;&lt;`, `&lt;&lt;-`, `&lt;&lt;&lt;`) just as it does after redirection &quot;operators&quot;.\n\nThis change adds `\\s*` to all regexps matching here-strings and the beginnings of here-documents.\n\nCloses #33."},{"commit":"46e5f293758d5e24349795271dbe51ea239d9f6b","date":"2016-10-27T17:45:14+02:00","author":"Martin Kühl","summary":"Add scope to shebang lines"},{"commit":"d0650a8304776f80382ad29eb98cd4ff38ef17c0","date":"2016-08-31T00:02:41-05:00","author":"Pat Gaffney","summary":"Add grammar support for readarray (array input)"},{"commit":"a025ab13c43e95e058d2bfaf8e89c55b38ff0aaf","date":"2016-08-31T00:01:43-05:00","author":"Pat Gaffney","summary":"Add grammar support for mapfile (array input)"},{"commit":"5e3796c9972e59ea660724b947d060b95dc83ea5","date":"2016-08-30T23:37:30-05:00","author":"Pat Gaffney","summary":"Add grammar support for coproc (coprocess command)","body":"Bash 4.0 introduced coprocesses -- a way to execute commands asynchronously in a subshell."},{"commit":"c8796d1105420249ddc338e3f6acf9d816d938eb","date":"2016-08-26T19:59:19+02:00","author":"Martin Kühl","summary":"Deny backslashes in block variables","body":"The variable names in for-in loops and select blocks are really variable\nnames, not strings, and may not contain backslashes or escape sequences."},{"commit":"8879eba3f2ccaa6581135b1b28783de9bf875214","date":"2016-08-09T18:06:28+02:00","author":"Martin Kühl","summary":"Relax requirements for emacs mode lines","body":"Thanks @nanoant for the suggestion!\n\nCloses #25"},{"commit":"887a69bdd7558f7aa2ecba28ffb224881bad6cb3","date":"2016-04-28T10:43:01+02:00","author":"Martin Kühl","summary":"#function-definition: Don&#39;t match illegal characters"},{"commit":"d59abb4e0da0d49312b2c7442736fbf7ea2f6852","date":"2016-03-14T13:35:53-03:00","author":"Felipe Meneguzzi","summary":"Update Open Directory to work with iTerm2","body":"Updated Open Directory command to work with iTerm2 using new [Applescript syntax](https://www.iterm2.com/applescript.html)\n\nFixes #28"},{"commit":"0bb3ff403ded67d6f650267b1db2afc1e99717bb","date":"2016-04-27T23:44:38-05:00","author":"Michael Sheets","summary":"Match strings before function definitions","body":"This prevents matching strings containing paired parentheses as function definitions.\n\nExample:\n\n```\n&#39;foo()&#39;\n```"}],"name":"Shell Script"}