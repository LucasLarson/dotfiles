{"commits":[{"commit":"008a996dfbce09d48db46b73dd05d4fcfae64dd7","date":"2017-03-12T17:40:57+01:00","author":"Martin Kühl","summary":"Support versioned python in first line","body":"The current first line match only matches `\\bpython\\b`, which means it doesn’t match hashbang lines with python executables containing a version number, like `python3` which is inserted by the `py3` first line snippet.\r\nThis means that when in a new file I expand `py3` the file isn’t switched to Python.\r\n\r\nThis change adds support for versions in the executable names (including periods like in `python2.7`)."},{"commit":"3b509b6bdced893d1506c909ffece5738a166acb","date":"2016-04-27T21:30:12-05:00","author":"Michael Sheets","summary":"Correct typo in comment item include"},{"commit":"0e532bb359fee1b860d0df484a2e7c49e0250db8","date":"2016-04-18T23:18:31-05:00","author":"Michael Sheets","summary":"Add Help command","body":"This details how to setup the `TM_PYCHECKER` variable for syntax checking. Based on a pull request from @evildmp"},{"commit":"b697d2c058da591191234cff24e735ca009d6458","date":"2014-01-28T11:30:36-06:00","author":"Christopher Fonnesbeck","summary":"Modernized property snippet"},{"commit":"21f605fd3e2e3aa044a22eba82d5db7b0b15b9b9","date":"2016-02-22T02:36:56-06:00","author":"Michael Sheets","summary":"Support unicode class/function names in the symbol list"},{"commit":"c851d49d36d9607600c03608f12b732666e08b5a","date":"2016-02-22T00:18:22-06:00","author":"Michael Sheets","summary":"Limit scope of SQL language include","body":"By pre-matching the snippet passed to the SQL grammar we prevent matches that consume an entire line from breaking the syntax matching. Only doing this for single-line strings because there are block contexts to consider for multi-line strings."},{"commit":"259d51e1821a9c70d7c3c278fa379c9faf966c14","date":"2016-02-09T07:10:04-06:00","author":"Michael Sheets","summary":"Exit matches early if the string is terminating","body":"This can cause a false positive by matching the wrong string type but this is better than leaving the string open."},{"commit":"780a9701e08dde28344f3ba963852e5a43b90733","date":"2016-02-09T07:08:12-06:00","author":"Michael Sheets","summary":"Support async keyword in indent patterns"},{"commit":"5eb283b6b83d5fcc250d42af7d0d3160972728a1","date":"2016-02-08T23:31:01-06:00","author":"Michael Sheets","summary":"Limit escaping in raw strings to quotes","body":"Marking these as escapes for clarity even though the backslash is included in the string content."},{"commit":"f44650daabd240a85f0f405de2fc644c5b3671f9","date":"2016-02-08T23:29:38-06:00","author":"Michael Sheets","summary":"Remove special handling of empty strings","body":"These can be matched with a grouped left/right scope match, there is no longer a need for a special scope."},{"commit":"1dcc46a175284b7b6ba1c3581d5f030361072c4c","date":"2016-02-08T23:24:47-06:00","author":"Michael Sheets","summary":"Add missing unicode escapes to byte strings"},{"commit":"71a74e4fcbf9907ce5dcb224a7df3b2b42ab7fd7","date":"2016-02-08T08:16:27-06:00","author":"Michael Sheets","summary":"Remove outdated &#39;del&#39; function match","body":"This is now matched by magic_function_calls or magic_function_names."},{"commit":"4338b9b4640327f5237bf6c35f7ad633a62b9963","date":"2016-02-08T07:29:04-06:00","author":"Michael Sheets","summary":"Cleanup generic function-call rule","body":"Remove outdated patterns and simplify rule."},{"commit":"e7a581b3b6ac63bb2f2a049131eed44f0c8ff98e","date":"2016-02-08T05:05:10-06:00","author":"Michael Sheets","summary":"Remove exec from keyword.other","body":"This is now matched by the built-in function rules."},{"commit":"a3f89e0b25d27013d2bd7823d76730d85986cfc2","date":"2016-01-05T18:12:17-05:00","author":"MattDMo","summary":"Fix support.type.python to only match word, not following spaces"},{"commit":"fc91fc58d6783c862fc5dc13ccc4671d42028cc4","date":"2015-12-07T13:41:09-05:00","author":"MattDMo","summary":"Correct matching of arguments when using self/cls as a function","body":"Fixes MattDMo/PythonImproved#52"},{"commit":"d1c2885f888cfad757d70252f884af101a48e345","date":"2015-12-04T21:45:52-05:00","author":"MattDMo","summary":"Remove unnecessary meta.item-access match"},{"commit":"ed699b197a6df25d2c4be7f4f158dd0359f3eeae","date":"2016-02-08T05:17:50-06:00","author":"Michael Sheets","summary":"Correct various issues with identifier matches"},{"commit":"72d4037ad403d9412e6caed2c8b5ebb959a04c61","date":"2016-02-08T01:20:29-06:00","author":"Michael Sheets","summary":"Correct issue matching magic function definitions","body":"Fixes MattDMo/PythonImproved#51, original commit by @MattDMo."},{"commit":"628fa162cdfdb4a2f4cc9fa41b5f48d1c9159239","date":"2016-02-08T01:17:18-06:00","author":"Michael Sheets","summary":"constant.other.allcaps will now not match before [.(&#39;&quot;]","body":"Original commit by @MattDMo"},{"commit":"1be912bdf93674e67df4bae67a783a6961c3ead1","date":"2015-12-04T12:17:48-05:00","author":"MattDMo","summary":"Do not match ellipsis when part of import statement","body":"Reported in MattDMo/PythonImproved#53"},{"commit":"1ba9f96b43872c786f4f7d08a3b966bb4ae3684d","date":"2015-11-05T18:54:38-05:00","author":"MattDMo","summary":"Fixed line continuation problem in function definitions","body":"Reported in MattDMo/PythonImproved#32"},{"commit":"e8b79601defa857b415d9753587c76b8daaf3127","date":"2015-10-17T23:32:42-04:00","author":"MattDMo","summary":"Add support for the ellipsis object"},{"commit":"6aff6bcbeec23cceb6ed1bd918ee3dc8628f2e9d","date":"2015-10-17T23:56:07-04:00","author":"MattDMo","summary":"Don&#39;t screw up decorator highlighting"},{"commit":"1bea9ce9ca0da8e8618aedb0f9e5c38b19fe04b3","date":"2015-09-15T18:03:11-04:00","author":"MattDMo","summary":"Add rule for print function call"},{"commit":"e9eed37e5bd55ae36032b035837eb8af3b35abcc","date":"2015-09-15T18:02:39-04:00","author":"MattDMo","summary":"Update built-in function names, variables, etc from manual","body":"Also split built-in functions and magic functions into two with one dedicated for function-calls."},{"commit":"a1e2dc95ec75d6f932fae11a8564d931b519cd3f","date":"2016-02-07T03:10:47-06:00","author":"Michael Sheets","summary":"Use storage.modifier scope for async keyword"},{"commit":"150797719173ebebe2d94bef1b7b6ad53c6e1811","date":"2015-09-10T22:15:36-04:00","author":"MattDMo","summary":"Update illegal names (aka keywords) - add False, None, True"},{"commit":"8f35edb5982d461f61dc125aaa5152d0f8589822","date":"2015-09-10T21:51:42-04:00","author":"MattDMo","summary":"Lower precedence of illegal_names match"},{"commit":"d8e1b633ff35fdec02b44473ef34d733d941e721","date":"2015-09-06T16:51:03-04:00","author":"MattDMo","summary":"Improve function call matching","body":"Discussed in MattDMo/PythonImproved#17"},{"commit":"bef40675b15b17026021a9881c4d45ce9334015e","date":"2016-02-06T05:38:56-06:00","author":"Michael Sheets","summary":"Match async as a separate scope","body":"This allows for better word selection based on it&#39;s characterClass."},{"commit":"222630cdfaf9d9d91f96f27ea889754ec699f577","date":"2015-08-14T13:04:02-04:00","author":"Yury Selivanov","summary":"Better scoping for &quot;async def&quot;"},{"commit":"3fe27bdeb427bf01cf23099104adaf13f2110334","date":"2015-08-12T09:30:42-04:00","author":"Matt Morrison","summary":"Add deprecated functions"},{"commit":"25aedfd99781752bcd8fa39ba1113aab1241a1c3","date":"2015-07-03T17:53:37-04:00","author":"Matt Morrison","summary":"Add changes in 3.5 (async, await, @ matrix operator)","body":"From MattDMo/PythonImproved#41."},{"commit":"dc083cbadac35d2973a11592ba1e6aa89b8cd0ab","date":"2015-03-09T13:00:36-04:00","author":"MattDMo","summary":"Add support for unicode identifiers"},{"commit":"e380637986f44ae7f32cadc3e3874bab273acbea","date":"2015-03-15T12:54:13-04:00","author":"MattDMo","summary":"Use \\h to simplify escape matches"},{"commit":"d79b034a06f3ff3e142b5e7ce6446b2cea64e38c","date":"2015-03-15T12:36:45-04:00","author":"MattDMo","summary":"Change hex escape from * to + to avoid invalid literals"},{"commit":"b6a9d54e9828d51d191e995d4a636dd8e4499444","date":"2015-03-10T20:33:58-07:00","author":"Dakota Schneider","summary":"Don&#39;t highlight invalid partial binary literals"},{"commit":"3cc32355fafca2f6ffcbac5d09e54894c8edb894","date":"2015-02-03T23:27:54-05:00","author":"Matt Morrison","summary":"Add `nonlocal` to #illegal_names"},{"commit":"f163afe90311f70ea16e31613af5a76f97da64b9","date":"2016-01-31T23:00:36-06:00","author":"Michael Sheets","summary":"Move constant.language match higher in precedence"},{"commit":"28c09a3d93811a6aa7830457da010bee7d1b0c44","date":"2014-09-03T19:41:31-04:00","author":"MattDMo","summary":"Allow lowercase hex in escaped_char, comma in unicode name"},{"commit":"b0a7fdf4f4bf148ec9275613849a883766e3c349","date":"2014-08-25T00:07:13-04:00","author":"MattDMo","summary":"Reduce constant.other.allcaps matches","body":"Do not highlight if there is a trailing . or ("},{"commit":"f6bee4a290459ae961167c19406622624d6cb11e","date":"2016-01-30T20:39:07-06:00","author":"Michael Sheets","summary":"Add rule to match ALL_CAPS constants","body":"constant.other.allcaps: Captures variable names that are in all caps (`OPENING_PORT`, for example), assuming the convention that these are generally treated as constants in the code.\n\nOriginal commit by @MattDMo"},{"commit":"ae6cc519eb618234cb313d4d39ec9ccdb265ecaf","date":"2014-06-28T18:12:31-04:00","author":"Matt Morrison","summary":"Improve matching of built-in functions","body":"Built-in functions like `any()`, `dict()`, `len()`, `raw_input()`, etc. now have their arguments highlighted just like any other function. Many thanks to [@facelessuser](https://github.com/facelessuser) for the regex, and [@FichteFoll](https://github.com/FichteFoll) for valuable discussion. For those working with Python 2, `print` is still a standalone keyword, as is `del`. If you can think of any others that should be as well, please [let me know](https://github.com/MattDMo/PythonImproved/issues/8)."},{"commit":"2ea4545080009e7745d74827313e88d9a3611b62","date":"2016-01-30T20:25:01-06:00","author":"Michael Sheets","summary":"Add version to support.variable.magic"},{"commit":"c436608917a94b01264c5ffd7e1100c2956155ff","date":"2014-03-04T15:36:02-05:00","author":"MattDMo","summary":"Add match for nonlocal storage modifier","body":"(storage.modifier.nonlocal)"},{"commit":"d9c87ce610ee6a88d10d6b0eb96c27e789a47e3f","date":"2016-01-30T20:10:30-06:00","author":"Michael Sheets","summary":"Include docstrings match in root of grammar"},{"commit":"9c3ff32199d82a3ba022c8edb51aba9b9fcc4838","date":"2016-01-30T06:02:28-06:00","author":"Michael Sheets","summary":"Allow for numerals in named unicode character escapes"},{"commit":"58cc08a86be7a9040594a347b04804e708a5436f","date":"2014-01-14T17:28:16-05:00","author":"MattDMo","summary":"Add additional magic functions"},{"commit":"7446303eb44263d938570e7ea71b0291d4db626a","date":"2013-12-28T04:56:55+11:00","author":"simonzack","summary":"Highlight self &amp; cls in function definitions"},{"commit":"44b0322b5ff91557baecf472c0ca5392512850e2","date":"2013-12-28T03:21:11+11:00","author":"simonzack","summary":"Differentiate normal arguments from keyword arguments"},{"commit":"ce83a22ba58e7cbdbcaadef391d93fb7c6f707a5","date":"2013-12-28T01:40:22+11:00","author":"simonzack","summary":"Allow instantiation of built-in exceptions"},{"commit":"9d6818b96a75bda7631ed17473e329b39994e81c","date":"2013-12-28T01:30:29+11:00","author":"simonzack","summary":"Match magic fields when accessed as attributes as well as globally"},{"commit":"57f9dc5974003f58c569f23ed7915d2b43314833","date":"2016-01-30T05:06:41-06:00","author":"Michael Sheets","summary":"Improve matching of built-in functions","body":"Now allows matching at the top level of the grammar with placement restrictions."},{"commit":"05bed5b395315f0cc08ebf2fc6f5825f7b18f3bd","date":"2013-12-26T23:27:10+11:00","author":"simonzack","summary":"String matches changes for Python 3","body":"- Add byte string definitions\n- Some fixes to unicode string definition comments\n- Allow normal strings to have unicode escape sequences too (in python 3 they are unicode strings)"},{"commit":"73fc286a22072c6ac68d8c39672e8238f13f55ab","date":"2013-11-04T15:16:32+01:00","author":"DarDar","summary":"Allow lambda to be parameterless","body":"Fix &#39;str&#39; highlighting for this code exemple\n\n```python\ndef f(k=lamda: &#39;str&#39;):\n    pass\n```"},{"commit":"13122c0ddd7ac6fd20a56939d664bf87e11f9a8d","date":"2013-11-02T09:52:48-06:00","author":"facelessuser","summary":"Experimental function annotation support"},{"commit":"0c76fd5ed79209c065af34a5dae63e0327197f5a","date":"2013-11-01T17:02:05-04:00","author":"MattDMo","summary":"Allow comments inside multi-line function defs"},{"commit":"4a7ad3557c242ed90cd85526222b62cde4d5a548","date":"2016-01-27T02:22:13-06:00","author":"Michael Sheets","summary":"Move comment.line rule into it&#39;s own repository item"},{"commit":"b5c131bfcf3b0b2ec241194f0de371a3cabd9c18","date":"2013-11-01T14:49:09-04:00","author":"MattDMo","summary":"Add bool function to support.function.magic"},{"commit":"e19220066e9fdea049752a900cd5abff83bb4b55","date":"2016-01-27T01:00:59-06:00","author":"Michael Sheets","summary":"Update built-in exceptions and functions"},{"commit":"83652a345d2325c63ae2e0ec125f23e64cc88a07","date":"2016-01-26T23:44:33-06:00","author":"Michael Sheets","summary":"Match as keyword as keyword.control.import.as"},{"commit":"ae63b2221297c7a70bf7d9e749b49fc1ec295a0e","date":"2016-01-26T23:29:42-06:00","author":"Michael Sheets","summary":"Support new type of numeric octal literals"},{"commit":"c5d4fa9af9c588507abdfe14c83a9b3302cb2614","date":"2016-01-26T23:13:42-06:00","author":"Michael Sheets","summary":"Support binary literals"},{"commit":"5420664666438bf85a89e69e03aa89807263d117","date":"2014-05-20T10:36:16-07:00","author":"Seth Hill","summary":"Use correct &#39;open&#39; in python3","body":"Remove test code"},{"commit":"81d40ffde989d9700d975eff18afc031f3995fe9","date":"2014-05-19T19:57:08-07:00","author":"Seth Hill","summary":"Improve Python 3 support (tracebacks are linked again)","body":"- Add Python 3.4 support around issue #27.\n- urllib.parse.quote instead of urllib.quote\n- don&#39;t set encoding on sys.stdout/sys.stderr (already UTF-8)\n- use open(&#39;w&#39;) instead of fdopen(&#39;wb&#39;) so we can write UTF-8 strings instead of bytes\n- safely test unicode-ness, only encode to UTF-8 in Python 2.x"}],"name":"Python"}