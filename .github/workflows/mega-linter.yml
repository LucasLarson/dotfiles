---
# Mega-Linter GitHub Action configuration file
# More info at https://nvuillam.github.io/mega-linter
# https://github.com/nvuillam/mega-linter/commit/c0779f9/.github/workflows/mega-linter.yml
name: Mega-Linter

# Start lint on any push and on pull requests
on:
  # Trigger mega-linter at every push.
  # Action will also be visible from Pull Requests to main

  # Comment the `push:` line to trigger action only on Pull Requests
  # (recommended if you pay for GH Actions)
  push:
  pull_request:
    branches: [main]

env:
  # Apply linter fixes configuration
  # Uncomment APPLY_FIXES line to apply fixes provided by linters
  # You can also specify the list of fixing linters
  APPLY_FIXES: all

  # Decide which event triggers application of fixes in a commit or a PR:
  # (pull_request (default), push, all)
  APPLY_FIXES_EVENT: pull_request

  # If APPLY_FIXES is also used, then this defines if the fixes are
  # directly committed (commit) or
  # posted in a PR (pull_request)
  APPLY_FIXES_MODE: pull_request

jobs:
  # Cancel duplicate jobs:
  # https://git.io/option-3-cancellation-only
  cancel_duplicates:
    name: Cancel duplicate jobs
    runs-on: ubuntu-latest
    steps:
      - uses: fkirc/skip-duplicate-actions@v3.3.0
        with:
          github_token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}

  build:
    name: Mega-Linter
    runs-on: ubuntu-latest
    steps:
      # Git Checkout
      - name: Checkout Code
        uses: actions/checkout@v2.3.4
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          # Full git history to determine changed files within `mega-linter`
          fetch-depth: 0

      # Mega-Linter
      - name: Mega-Linter
        id: ml
        uses: nvuillam/mega-linter@v4.26.1
        env:
          # Add custom env variables here or
          # define them in a file .mega-linter.yml at the repository root
          # All available variables are described in documentation
          # https://nvuillam.github.io/mega-linter/#configuration

          # Validates all source when push on main, else just the
          # git diff with main.
          # Override with true if you always want to lint all sources
          VALIDATE_ALL_CODEBASE: >
            ${{
              github.event_name == 'push' &&
              github.ref == 'refs/heads/main'
            }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main
          FILTER_REGEX_EXCLUDE: '(\.automation\/test\/)'
          DISABLE: >
            SPELL
          DISABLE_LINTERS: COPYPASTE,EDITORCONFIG_CHECKER,MARKDOWN_LINK_CHECK

      # Upload Mega-Linter artifacts
      - name: Archive production artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v2.2.2
        with:
          name: Mega-Linter reports
          path: |
            report
            mega-linter.log

      # This step will evaluate the repo status and report the change
      - name: Check if there are changes
        id: changes
        if: ${{ success() }} || ${{ failure() }}
        uses: UnicornGlobal/has-changes-action@v1.0.11

      # Create pull request if applicable
      - name: Create Pull Request with applied fixes
        id: cpr
        if: >
          steps.ml.outputs.has_updated_sources == 1 &&
          (
            env.APPLY_FIXES_EVENT == 'all' ||
            env.APPLY_FIXES_EVENT == github.event_name
          ) &&
          env.APPLY_FIXES_MODE == 'pull_request'
        uses: peter-evans/create-pull-request@v3.8.2
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          commit-message: "[Mega-Linter] Apply linters automatic fixes"
          title: "[Mega-Linter] Apply linters automatic fixes"
          labels: bot
      - name: Create PR output
        if: >
          steps.ml.outputs.has_updated_sources == 1 &&
          (
            env.APPLY_FIXES_EVENT == 'all' ||
            env.APPLY_FIXES_EVENT == github.event_name
          ) &&
          env.APPLY_FIXES_MODE == 'pull_request'
        run: |
          echo "PR #${{ steps.cpr.outputs.pull-request-number }}"
          echo "${{ steps.cpr.outputs.pull-request-url }}"

      # Push new commit if applicable
      - name: Prepare commit
        if: >
          steps.ml.outputs.has_updated_sources == 1 &&
          (
            env.APPLY_FIXES_EVENT == 'all' ||
            env.APPLY_FIXES_EVENT == github.event_name
          ) &&
          env.APPLY_FIXES_MODE == 'commit' &&
          github.ref != 'refs/heads/main'
        run: sudo chown -Rc $UID .git/
      - name: Commit and push applied linter fixes
        if: >
          steps.ml.outputs.has_updated_sources == 1 &&
          (
            env.APPLY_FIXES_EVENT == 'all' ||
            env.APPLY_FIXES_EVENT == github.event_name
          ) &&
          env.APPLY_FIXES_MODE == 'commit' &&
          github.ref != 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v4.9.2
        with:
          branch: >
            ${{
              github.event.pull_request.head.ref ||
              github.head_ref ||
              github.ref
            }}
          commit_message: "[Mega-Linter] Apply linters fixes"
